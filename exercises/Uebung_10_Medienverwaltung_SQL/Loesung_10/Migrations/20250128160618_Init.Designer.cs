// <auto-generated />
using Medienverwaltung_Aufgabe_9;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medienverwaltung_Aufgabe_9.Migrations
{
    [DbContext(typeof(MedienverwaltungContext))]
    [Migration("20250128160618_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Medienverwaltung_Aufgabe_9.Medium", b =>
                {
                    b.Property<int>("Signatur")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Signatur");

                    b.ToTable("Medien");

                    b.HasDiscriminator<string>("Type").HasValue("Medium");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Medienverwaltung_Aufgabe_9.Buch", b =>
                {
                    b.HasBaseType("Medienverwaltung_Aufgabe_9.Medium");

                    b.Property<int>("Seitenzahl")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Buch");
                });

            modelBuilder.Entity("Medienverwaltung_Aufgabe_9.Tonie", b =>
                {
                    b.HasBaseType("Medienverwaltung_Aufgabe_9.Medium");

                    b.Property<double>("Laufzeit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float")
                        .HasColumnName("Laufzeit");

                    b.HasDiscriminator().HasValue("Tonie");
                });

            modelBuilder.Entity("Medienverwaltung_Aufgabe_9.Video", b =>
                {
                    b.HasBaseType("Medienverwaltung_Aufgabe_9.Medium");

                    b.Property<double>("Laufzeit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("float")
                        .HasColumnName("Laufzeit");

                    b.HasDiscriminator().HasValue("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
